document.addEventListener('DOMContentLoaded', function () {

  // Radio Buttons clickable

  const radioContainers = document.querySelectorAll('.toDoList__category-item-container');

  const clicked = (container) => {
    const radioBtn = container.querySelector('.toDoList__category-item')
    const radioBtnBusiness = container.querySelector('.toDoList__category-item-business')
    const radioBtnPersonal = container.querySelector('.toDoList__category-item-personal')

    radioContainers.forEach(container => {
      container.querySelector('.toDoList__category-item').classList.remove('active')
    });

    radioBtn.classList.add('active');
  }

  radioContainers.forEach(container => {
    container.addEventListener('click', () => clicked(container))
  })

  ///////////////////////////////////////////////

  const form = document.querySelector('form'); // –ü–æ–ª—É—á–∞–µ–º form
  const newTaskInput = document.querySelector('.toDoList__create-task-input'); // –ü–æ–ª—É—á–∞–µ–º input 
  const taskList = document.querySelector('.toDoList__tasks-list'); // –ü–æ–ª—É—á–∞–µ–º ul
  const taskItem = taskList.querySelector('li')

  form.addEventListener('submit', (event) => { // –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—à–∞—Ç–µ–ª—å —Å–æ–±—ã—Ç–∏—è –¥–ª—è form —á—Ç–æ–±—ã –¥–∞–ª–µ–µ –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É –≤ —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á
    event.preventDefault();  // –ù–µ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É
    const task = newTaskInput.value; // –ü–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞—à–µ–≥–æ input, –≥–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–∏—à–µ—Ç —Ç–æ, —á—Ç–æ —Ö–æ—á–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å –≤ —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á.

    if (newTaskInput.value !== "") {
      addTask(task)

    } else {
      alert('–û–ø–∞–Ω—å–∫–∏! –ó–∞–¥–∞—á–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç–æ–π. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!üòá')

    }
    newTaskInput.value = ''; // –ß–∏—Å—Ç–∏–º input
  })

  const addTask = (task) => {
    const taskItem = document.createElement('li'); // —Å–æ–∑–¥–∞–µ–º li 

    //  –ü–†–û–í–ï–†–Ø–ï–ú –≥–¥–µ –µ—Å—Ç—å –∫–ª–∞—Å—Å active
    const active = document.querySelector('.active');

    // taskItem (li) structure
    taskItem.innerHTML = `
          <div class="taskName-container">
            <div class="category">
                      <div —Ålass="inner-border">
                        </div>
            </div>
            <span class="taskName">${task}</span> 
          </div>
          <div class="action-btns">
            <button class='editBtn'>Edit</button> 
            <button class='deleteBtn'>Delete </button>
          </div>
          `;

    const taskNameContainer = taskItem.querySelector('.taskName-container');
  

    const category = taskItem.querySelector('.category'); // –ø–æ–ª—É—á–∞–µ–º category –∏–∑ li

    const innerBorder = category.querySelector('div') // –ü–æ–ª—É—á–∞–µ–º inner-border –∏–∑ category

    // const innerBorder = category.querySelector('.inner-border') // –ü–æ–ª—É—á–∞–µ–º inner-border –∏–∑ category

    const taskName = taskNameContainer.querySelector('span'); // –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏

    // taskName styles
    taskName.style.fontSize = "20px";

    const actionBtns = taskItem.querySelector('.action-btns')

    const editBtn = actionBtns.querySelector('.editBtn');

    const deleteBtn = actionBtns.querySelector('.deleteBtn');

    // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è –∑–∞–¥–∞—á–∏ –≤ —Å–ø–∏—Å–∫–µ –∑–∞–¥–∞—á
    if (active.parentElement.querySelector('p').textContent === 'Business') {

      // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ Business 
      category.style.border = "3px solid rgba(50,118,235,255)";
      category.style.boxShadow = "0px 0px 10px 0px rgba(50,118,235,255)";
      innerBorder.style.border = '2px solid rgba(50,118,235,255)';

    } else {

      // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ Personal
      category.style.border = "3px solid rgba(233,76,160,255)";
      category.style.boxShadow = "0px 0px 10px 0px rgba(233,76,160,255)";
      innerBorder.style.border = '2px solid rgba(233,76,160,255)';

    }

    taskList.appendChild(taskItem); // –î–æ–±–∞–≤–ª—è–µ–º taskItem (li) –≤ taskList (ul)

  }


  // –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ Delete –∏ Edit

  taskList.addEventListener('click', (event) => { // –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—à–∞—Ç–µ–ª—å —Å–æ–±—ã—Ç–∏—è click –∫ taskList
    event.preventDefault(); // –ò–∑–±–µ–≥–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã

    // const taskItem = event.target.parentElement.parentElement; // –ù–∞—Ö–æ–¥–∏–º li
    const taskItem = event.target.closest('li'); // –ù–∞—Ö–æ–¥–∏–º li

    // Delete
    if (event.target.className === 'deleteBtn') { // –ï—Å–ª–∏ —Ç–æ, –∫—É–¥–∞ –Ω–∞–∂–∏–º–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫–Ω–æ–ø–∫–∞ delete
      
      taskList.removeChild(taskItem); // –∏–∑ ul —É–¥–∞–ª—è–µ–º –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—É—é li
      
    }


    // Edit
    if (event.target.className === 'editBtn') { // –ï—Å–ª–∏ —Ç–æ, –∫—É–¥–∞ –Ω–∞–∂–∏–º–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫–Ω–æ–ø–∫–∞ edit
      
      const span = taskItem.querySelector('span'); // –°–æ–∑–¥–∞–µ–º –∏ –Ω–∞—Ö–æ–¥–∏–º span –∫–æ—Ç–æ—Ä—ã–π —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ, —á—Ç–æ –≤–≤–µ–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
   
    

      if (span) { // –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ span –≤ taskItem (li)
        const taskNameContainer = taskItem.querySelector('.taskName-container');
        const input = document.createElement('input'); // –°–æ–∑–¥–∞–µ–º input 
        input.type = 'text'; // –î–æ–±–∞–≤–ª—è–µ–º —Ç–∏–ø –≤ input 
        input.value = span.textContent; // input –±–µ—Ä–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ span - —Ç–æ, —á—Ç–æ –≤–≤–µ–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–Ω–µ–µ

        taskNameContainer.replaceChild(input, span) // –ó–∞–º–µ–Ω—è–µ–º span –Ω–∞ input –≤ li

        input.addEventListener('blur', () => { // –ü—Ä–∏ –ø–æ—Ç–µ—Ä–µ —Ñ–æ–∫—É—Å–∞, –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
          // span.textContent = input.value  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º span –≤–º–µ—Å—Ç–æ input
          const task = document.createElement('span')
          task.textContent = input.value
          

          taskItem.innerHTML = `
          <div class="taskName-container">
            <div class="category">
                      <div —Ålass="inner-border">
                        </div>
            </div>
            <span class="taskName">${task.textContent}</span> 
          </div>
          <div class="action-btns">
            <button class='editBtn'>Edit</button> 
            <button class='deleteBtn'>Delete </button>
          </div>
          `;

          const taskNameContainer = taskItem.querySelector('.taskName-container');

          const category = taskItem.querySelector('.category'); // –ø–æ–ª—É—á–∞–µ–º category –∏–∑ li

          const innerBorder = category.querySelector('div') // –ü–æ–ª—É—á–∞–µ–º inner-border –∏–∑ category

          const taskName = taskNameContainer.querySelector('span'); // –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏

          // taskName styles
          taskName.style.fontSize = "20px";

          const actionBtns = taskItem.querySelector('.action-btns')

          const editBtn = actionBtns.querySelector('.editBtn');

          const deleteBtn = actionBtns.querySelector('.deleteBtn');

          const active = document.querySelector('.active');

          // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è –∑–∞–¥–∞—á–∏ –≤ —Å–ø–∏—Å–∫–µ –∑–∞–¥–∞—á
          if (active.parentElement.querySelector('p').textContent === 'Business') {

            // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ Business 
            category.style.border = "3px solid rgba(50,118,235,255)";
            category.style.boxShadow = "0px 0px 10px 0px rgba(50,118,235,255)";
            innerBorder.style.border = '2px solid rgba(50,118,235,255)';

          } else {

            // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ Personal
            category.style.border = "3px solid rgba(233,76,160,255)";
            category.style.boxShadow = "0px 0px 10px 0px rgba(233,76,160,255)";
            innerBorder.style.border = '2px solid rgba(233,76,160,255)';

          }

          // taskList.appendChild(taskItem); // –î–æ–±–∞–≤–ª—è–µ–º taskItem (li) –≤ taskList (ul)

        })

        input.focus();
      }
    }

    // crossOut
    // if(event.target.className === 'inner-border'){
    //   // const taskItem = taskList.querySelector('li')
    //   // const  innerBorder = taskItem.querySelector('.inner-border');
    //   // console.log(innerBorder)
    //   // console.log(taskItem)
    //   const taskNameContainer = taskItem.querySelector('.taskName-container')
    //   const taskName = taskNameContainer.querySelector('span')
    //   taskName.style.textDecoration = 'line-through';
    // }
    
    if(event.target.tagName === 'DIV'){
      // const taskItem = taskList.querySelector('li')
      // const  innerBorder = taskItem.querySelector('.inner-border');
      // console.log(innerBorder)
      // console.log(taskItem)
      const taskNameContainer = taskItem.querySelector('.taskName-container')
      const taskName = taskNameContainer.querySelector('span')
      taskName.style.textDecoration = 'line-through';
    }
    
  })

});


